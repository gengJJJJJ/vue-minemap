# workflow 名称，可以自定义
name: Deploy GitHub Pages

# 触发条件：在代码 push 到 main 分支后，自动执行该 workflow
on:
    push:
        branches:
            - main
        paths:
            - 'doc/books/**'

# 任务
jobs:
    build-and-deploy:
        # 服务器环境：最新版 Ubuntu，也可以自定义版本
        runs-on: ubuntu-latest
        steps:
            # 拉取代码
            - name: Checkout
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0

            # 设置 Node.js 版本
            - name: Setup Node.js environment
              uses: actions/setup-node@v3
              with:
                  node-version: '16.x'
                  cache: 'npm'

            # 缓存 node_modules
            #- name: Cache dependencies
            #  uses: actions/cache@v3
            #  id: npm-cache
            #  with:
            #      path: 'node_modules'
            #      key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
            #      restore-keys: |
            #         ${{ runner.os }}-npm-
            # 如果缓存没有命中，安装依赖
            #- name: Install dependencies
            # if: steps.npm-cache.outputs.cache-hit != 'true'
            # run: npm ci
            #- name: Install dependencies in doc folder
            #  working-directory: doc
            #  run: npm install
            # 生成静态文件
            - name: Build VuePress docs
              working-directory: doc
              run: npm run build

            # 部署到 GitHub Pages
            - name: Deploy to GitHub Pages
              uses: crazy-max/ghaction-github-pages@v3
              env:
                  GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }} # ACCESS_TOKEN 是创建的 Secret 名称
              with:
                  target-branch: gh-pages # 部署到 gh-pages 分支，main 分支存放的是项目源码，而 gh-pages 分支则用来存放生成的静态文件
                  build_dir: ./doc/.vuepress/dist # vuepress 生成的静态文件存放的地方
